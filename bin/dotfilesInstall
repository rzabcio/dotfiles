#!/bin/bash
DOTFILES=~/dotfiles
mkdir -p ~/bin
mkdir -p ~/.config

### bin symlinks
for symlink in "$DOTFILES"/bin/*; do
  ln -sf "$symlink" ~/bin
done

### install packages
pkg_install() {
  if [ -n "$(command -v apt)" ]; then
    sudo apt update
    sudo apt -yq install "$@"
  elif [ -n "$(command -v yum)" ]; then
    sudo yum -y install "$@"
  elif [ -n "$(command -v pacman)" ]; then
    sudo pacman -Sy --noconfirm "$@"
  elif [ -n "$(command -v zypper)" ]; then
    sudo zypper install -y "$@"
  else
    echo "No package manager found."
  fi
}
pkg_uninstall() {
  if [ -n "$(command -v apt)" ]; then
    sudo apt -yq remove "$@"
  elif [ -n "$(command -v yum)" ]; then
    sudo yum -y remove "$@"
  elif [ -n "$(command -v pacman)" ]; then
    sudo pacman -R --noconfirm "$@"
  elif [ -n "$(command -v zypper)" ]; then
    sudo zypper remove "$@"
  else
    echo "No package manager found."
  fi
}
pkg_version() {
  if [ -n "$(command -v apt)" ]; then
    apt-cache policy "$1" | grep -oP '(?<=Candidate: ).*'
  elif [ -n "$(command -v yum)" ]; then
    yum info "$1" | grep -oP '(?<=Version\s*:\s*).+'
  elif [ -n "$(command -v pacman)" ]; then
    pacman -Qi "$1" | grep -oP '(?<=Version\s*:\s*).+'
  elif [ -n "$(command -v zypper)" ]; then
    zypper info "$1" | grep -oP '(?<=Version\s*:\s*).+'
  else
    echo "No package manager found."
  fi
}

# install some default packages
packages=(
  direnv
  fzf
  jq
  lazygit
  ripgrep
  zsh
)
for package in "${packages[@]}"; do
  if [ -z "$(command -v "$package")" ]; then
    pkg_install "$package"
  fi
done
# special cases (package != command)
if [ -z "$(command -v fdfind)" ]; then pkg_install fd-find; fi

### oh-my-zsh install
if [ ! -d ~/.oh-my-zsh ]; then
  sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
fi

# oh-my-zsh install
ZSH_CUSTOM=${ZSH_CUSTOM:-~/.oh-my-zsh/custom}
if [ ! -d "${ZSH_CUSTOM}/plugins/zsh-autosuggestions" ]; then
	git clone https://github.com/zsh-users/zsh-autosuggestions "${ZSH_CUSTOM}/plugins/zsh-autosuggestions"
fi
if [ ! -d "${ZSH_CUSTOM}/plugins/fzf-tab" ]; then
	git clone https://github.com/Aloxaf/fzf-tab "${ZSH_CUSTOM}/plugins/fzf-tab"
fi

# additional themes
if [ ! -f "${ZSH_CUSTOM}/themes/headline.zsh-theme" ]; then
	wget https://raw.githubusercontent.com/moarram/headline/main/headline.zsh-theme -O "${ZSH_CUSTOM}/themes/headline.zsh-theme"
fi
if [ ! -d "${ZSH_CUSTOM}/themes/powerlevel10k" ]; then
	git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "${ZSH_CUSTOM}/themes/powerlevel10k"
fi


### Tmux
if [ ! -d ~/.tmux/plugins ]; then
  mkdir -p ~/.tmux/plugins
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
fi
### Tmuxifier
ln -sn $DOTFILES/.config/tmuxifier ~/.config/tmuxifier

### Various
ln -sf $DOTFILES/.bashrc ~/.bashrc
ln -sf $DOTFILES/.ctags ~/.ctags
ln -sf $DOTFILES/.dircolors ~/.dircolors
ln -sf $DOTFILES/.tmux.conf ~/.tmux.conf
# ln -sf $DOTFILES/.tmuxp ~/.tmuxp
ln -sf $DOTFILES/.vifm ~/.vifm
ln -sf $DOTFILES/.zshrc ~/.zshrc
if [ -d ~/.oh-my-zsh ]; then
  ln -sf $DOTFILES/.oh-my-zsh/themes/rzabcio.zsh-theme ~/.oh-my-zsh/themes/rzabcio.zsh-theme
fi

### Vim
ln -sf $DOTFILES/.vimrc ~/.vimrc
mkdir -p ~/.vim/swapfiles
ln -sf $DOTFILES/.vim/autoload ~/.vim/autoload
vim +'PlugInstall --sync' +qa


### NeoVim
ln -sn $DOTFILES/.config/nvim ~/.config/nvim
# check if available version of neovim is larger than 0.10.0 -- install from tarball if not
nvim_ver=$(pkg_version neovim)
if [ -z "$nvim_ver" ] && [ "$(echo "$nvim_ver" | head -n 1 | cut -d ' ' -f 2 | cut -d '.' -f 2)" -gt 9 ]; then
  pkg_install neovim
else
  curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux-x86_64.tar.gz
  tar -C "$HOME/.local/" -xzf nvim-linux-x86_64.tar.gz --strip-components=1
fi


### Ranger
ln -sn $DOTFILES/.config/ranger ~/.config/ranger


### Lazygit
ln -sn $DOTFILES/.config/lazygit ~/.config/lazygit


### Lazydocker
ln -sn $DOTFILES/.config/lazydocker ~/.config/lazydocker


### WSL
WIN_HOME_DIR=/mnt/c/Users/jglazik
if [ -d "$WIN_HOME_DIR" ]; then
  mkdir -p $WIN_HOME_DIR/.vim/autoload
  cp $DOTFILES/.vim/autoload/plug.vim $WIN_HOME_DIR/.vim/autoload/plug.vim
  cp $DOTFILES/.vimrc $WIN_HOME_DIR
fi
